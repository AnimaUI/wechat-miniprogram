/*!
 _________
|   布局   |\
| ~~~~~~~ |_\
|  flex   |
| ~~~~~~~ |
| ~~~~~~~ |
|_________|
*/
.block {
    display: block;
}
.none {
    display: none;
}
.il-block {
    display: inline-block;
}
.fr {
    float: right;
}
.fl {
    float: left;
}
.flex {
    display: flex;
}
.vertical-middle {
    vertical-align: middle;
}
.text-left {
    text-align: left;
}
.text-center {
    text-align: center;
}
.text-right {
    text-align: right;
}
.block-center {
    margin: 0 auto;
}

/* 项目位于容器的开头 */
.justify-start {
    justify-content: flex-start;
}

/* 项目位于容器的结尾 */
.justify-end {
    justify-content: flex-end;
}

/* 项目位于容器的中心 */
.justify-center {
    justify-content: center;
}

/* 项目位于各行之间留有空白的容器内 */
.justify-between {
    justify-content: space-between;
}

/* 项目位于各行之前、之间、之后都留有空白的容器内 */
.justify-around {
    justify-content: space-around;
}

.align-start {
    align-items: flex-start;
}

.align-end {
    align-items: flex-end;
}

.align-center {
    align-items: center;
}

.align-stretch {
    align-items: stretch;
}

.self-start {
    align-self: flex-start;
}

.self-center {
    align-self: flex-center;
}

.self-end {
    align-self: flex-end;
}

.self-stretch {
    align-self: stretch;
}

.flex-direction-row {
    flex-direction: row;
}

.flex-direction-row-reverse {
    flex-direction: row-reverse;
}

.flex-direction-column {
    flex-direction: column;
}

.flex-direction-column-reverse {
    flex-direction: column-reverse;
}

.flex-wrap {
    flex-wrap: wrap;
}

.flex-xs {
    flex-basis: 20%;
}

.flex-sm {
    flex-basis: 40%;
}

.flex-hf {
    flex-basis: 50%;
}

.flex-lg {
    flex-basis: 60%;
}

.flex-xl {
    flex-basis: 80%;
}

.flex-xxl {
    flex-basis: 100%;
}

.flex-once {
    flex: 1;
}

.flex-twice {
    flex: 2;
}

.flex-treble {
    flex: 3;
}

.flex-four {
    flex: 4;
}

.grid {
    display: grid;
    &.col-1 {
        grid-template-columns: 100%;
        grid-template-rows: auto;
    }
    &.col-2 {
        grid-template-columns: 50% 50%;
        grid-template-rows: auto;
    }
    &.col-3 {
        grid-template-columns: 33.33% 33.33% 33.33%;
        grid-template-rows: auto;
    }
    &.col-4 {
        grid-template-columns: 25% 25% 25% 25%;
        grid-template-rows: auto;
    }
    &.col-5 {
        grid-template-columns: 20% 20% 20% 20% 20%;
        grid-template-rows: auto;
    }
    --grid-row-gap: 10rpx;
    --grid-column-gap: 10rpx;
    &.grid-row-gap {
        grid-row-gap: var(--grid-row-gap);
    }
    &.grid-column-gap {
        grid-column-gap: var(--grid-column-gap);
    }
    /* 先行后列 */
    &.grid-af-rd {
        grid-auto-flow: row dense;
    }
    /* 先列后行 */
    &.grid-af-cd {
        grid-auto-flow: column dense;
    }
}

.relative {
    position: relative;
}

.absolute {
    position: absolute;
}

.fixed {
    position: fixed;
}

.static {
    position: static;
}

.overflow-hidden {
    overflow: hidden;
}

/* margin-left */
.marginLeft(100);
.marginLeft(@ml, @i: 0) when (@i =< @ml) {
    .ml-@{i} {
        margin-left: 0rpx + @i;
    }
    .marginLeft(@ml, (@i + 2));
}
/* margin-right */
.marginRight(100);
.marginRight(@mr, @i: 0) when (@i =< @mr) {
    .mr-@{i} {
        margin-right: 0rpx + @i;
    }
    .marginRight(@mr, (@i + 2));
}
/* margin-top */
.marginTop(100);
.marginTop(@mt, @i: 0) when (@i =< @mt) {
    .mt-@{i} {
        margin-top: 0rpx + @i;
    }
    .marginTop(@mt, (@i + 2));
}
/* margin-botoom */
.marginBotoom(100);
.marginBotoom(@mb, @i: 0) when (@i =< @mb) {
    .mb-@{i} {
        margin-bottom: 0rpx + @i;
    }
    .marginBotoom(@mb, (@i + 2));
}
/* margin */
.margin(100);
.margin(@m, @i: 0) when (@i =< @m) {
    .margin-@{i} {
        margin: 0rpx + @i;
    }
    .margin(@m, (@i + 2));
}

.margin-xs {
    margin: 10rpx;
}

.margin-sm {
    margin: 20rpx;
}

.margin-sub {
    margin: 30rpx;
}

.margin-lg {
    margin: 40rpx;
}

.margin-xl {
    margin: 50rpx;
}

/* padding-left */
.paddingLeft(100);
.paddingLeft(@pl, @i: 0) when (@i =< @pl) {
    .pl-@{i} {
        padding-left: 0rpx + @i;
    }
    .paddingLeft(@pl, (@i + 2));
}
/* padding-right */
.paddingRight(100);
.paddingRight(@pr, @i: 0) when (@i =< @pr) {
    .pr-@{i} {
        padding-right: 0rpx + @i;
    }
    .paddingRight(@pr, (@i + 2));
}
/* padding-top */
.paddingTop(100);
.paddingTop(@pt, @i: 0) when (@i =< @pt) {
    .pt-@{i} {
        padding-top: 0rpx + @i;
    }
    .paddingTop(@pt, (@i + 2));
}
/* padding-botoom */
.paddingBotoom(100);
.paddingBotoom(@pb, @i: 0) when (@i =< @pb) {
    .pb-@{i} {
        padding-bottom: 0rpx + @i;
    }
    .paddingBotoom(@pb, (@i + 2));
}
/* padding */
.padding(100);
.padding(@p, @i: 0) when (@i =< @p) {
    .padding-@{i} {
        padding: 0rpx + @i;
    }
    .padding(@p, (@i + 2));
}

.padding-xs {
    padding: 10rpx;
}

.padding-sm {
    padding: 20rpx;
}

.padding-sub {
    padding: 30rpx;
}

.padding-lg {
    padding: 40rpx;
}

.padding-xl {
    padding: 50rpx;
}

.solid,
.solid-top,
.solid-right,
.solid-bottom,
.solid-left,
.solids,
.solids-top,
.solids-right,
.solids-bottom,
.solids-left,
.dashed,
.dashed-top,
.dashed-right,
.dashed-bottom,
.dashed-left {
	position: relative;
}
.solid::after,
.solid-top::after,
.solid-right::after,
.solid-bottom::after,
.solid-left::after,
.solids::after,
.solids-top::after,
.solids-right::after,
.solids-bottom::after,
.solids-left::after,
.dashed::after,
.dashed-top::after,
.dashed-right::after,
.dashed-bottom::after,
.dashed-left::after {
    content: '';
    width: 200%;
    height: 200%;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: inherit;
    transform: scale(.5);
    transform-origin: 0 0;
    pointer-events: none;
    box-sizing: border-box;
}
/* 实线 */
.solid::after {
    border: 4rpx solid rgba(0, 0, 0, .1);
}

.solid-top::after {
    border-top: 4rpx solid rgba(0, 0, 0, .1);
}

.solid-right::after {
    border-right: 4rpx solid rgba(0, 0, 0, .1);
}

.solid-bottom::after {
    border-bottom: 4rpx solid rgba(0, 0, 0, .1);
}

.solid-left::after {
    border-left: 4rpx solid rgba(0, 0, 0, .1);
}

.solids::after {
	border: 6rpx solid rgba(0, 0, 0, .1);
}

.solids-top::after {
	border-top: 6rpx solid rgba(0, 0, 0, .1);
}

.solids-right::after {
	border-right: 6rpx solid rgba(0, 0, 0, .1);
}

.solids-bottom::after {
	border-bottom: 6rpx solid rgba(0, 0, 0, .1);
}

.solids-left::after {
	border-left: 6rpx solid rgba(0, 0, 0, .1);
}

/* 虚线 */

.dashed::after {
    border: 4rpx dashed rgba(0, 0, 0, .1);
}

.dashed-top::after {
    border-top: 4rpx dashed rgba(0, 0, 0, .1);
}

.dashed-right::after {
    border-right: 4rpx dashed rgba(0, 0, 0, .1);
}

.dashed-bottom::after {
    border-bottom: 4rpx dashed rgba(0, 0, 0, .1);
}

.dashed-left::after {
    border-left: 4rpx dashed rgba(0, 0, 0, .1);
}
.radius {
    border-radius: 6rpx;
}
.circle {
    border-radius: 50%;
}
.round {
    border-radius: 9999rpx;
}

/* radius */
.radius(100);
.radius(@rd, @i: 0) when (@i =< @rd) {
    .radius-@{i} {
        border-radius: 0rpx + @i;
    }
    .radius(@rd, (@i + 2));
}
